From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ryan Volz <ryan.volz@gmail.com>
Date: Mon, 11 Oct 2021 15:02:55 -0400
Subject: [PATCH] grc: Look up type aliases as a set instead of a single value.

After #5127, we inadvertently had duplicate dictionary keys, meaning the
last entry is the only one that actually existed and some desired
aliases were missing. This changes the ALIAS_OF dictionary to ALIASES_OF
where the values are now a set of aliases instead of a single string
value. The one use of the ALIAS_OF dictionary was changed to operate on
the returned set.

Signed-off-by: Ryan Volz <ryan.volz@gmail.com>
---
 grc/core/Connection.py   |  4 ++--
 grc/core/Constants.py.in | 34 ++++++++++++++++------------------
 2 files changed, 18 insertions(+), 20 deletions(-)

diff --git a/grc/core/Connection.py b/grc/core/Connection.py
index ba4f2fadf..d0bf382c2 100644
--- a/grc/core/Connection.py
+++ b/grc/core/Connection.py
@@ -20,7 +20,7 @@ Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
 from __future__ import absolute_import
 
 from .base import Element
-from .Constants import ALIAS_OF
+from .Constants import ALIASES_OF
 from .utils.descriptors import lazy_property
 
 
@@ -105,7 +105,7 @@ class Connection(Element):
 
         source_dtype = self.source_port.dtype
         sink_dtype = self.sink_port.dtype
-        if source_dtype != sink_dtype and source_dtype != ALIAS_OF.get(sink_dtype):
+        if source_dtype != sink_dtype and source_dtype not in ALIASES_OF.get(sink_dtype):
             self.add_error_message('Source IO type "{}" does not match sink IO type "{}".'.format(source_dtype, sink_dtype))
 
         source_size = self.source_port.item_size
diff --git a/grc/core/Constants.py.in b/grc/core/Constants.py.in
index a973884c6..6bdf419c7 100644
--- a/grc/core/Constants.py.in
+++ b/grc/core/Constants.py.in
@@ -129,24 +129,22 @@ ALIAS_TYPES = {
     'bits':    (1, GRC_COLOR_PURPLE_A100),
 }
 
-ALIAS_OF = {
-    'complex': 'fc32',
-    'float': 'f32',
-    'int': 's32',
-    'short': 's16',
-    'short': 'sc16',
-    'byte': 's8',
-    'byte': 'sc8',
-    'bits': 'bit',
-
-    'fc32': 'complex',
-    'f32': 'float',
-    's32': 'int',
-    's16': 'short',
-    'sc16': 'short',
-    's8': 'byte',
-    'sc8': 'byte',
-    'bit': 'bits',
+ALIASES_OF = {
+    'complex': {'fc32'},
+    'float': {'f32'},
+    'int': {'s32'},
+    'short': {'s16', 'sc16'},
+    'byte': {'s8', 'sc8'},
+    'bits': {'bit'},
+
+    'fc32': {'complex'},
+    'f32': {'float'},
+    's32': {'int'},
+    's16': {'short'},
+    'sc16': {'short'},
+    's8': {'byte'},
+    'sc8': {'byte'},
+    'bit': {'bits'},
 }
 
 TYPE_TO_SIZEOF = {key: sizeof for name, key, sizeof, color in CORE_TYPES}
-- 
2.32.0

